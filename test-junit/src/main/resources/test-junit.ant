<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project name="org.apache.easyant.plugins#test-junit"
    xmlns:ea="antlib:org.apache.easyant">

    <ea:core-version requiredrevision="[0.9,+]" />

    <ea:import mrid="org.apache.easyant.plugins#abstract-test;0.9" />
    <ea:import mrid="org.apache.easyant.plugins#antcontrib-activator;0.9" />

    <target name="test-junit:init" depends="abstract-test:init">
        <ea:parameter property="test.run.forkmode"
            default="perTest" description="The forkmode for junit tests; 'perTest' or 'once'"/>
        <ea:parameter property="test.run.fork"
            default="true" description="Run the tests in a separate VM. (true/false)"/>
        <ea:parameter property="test.run.jvmargs"
            default="" description="Extra parameters to pass to the test JVM, for example to enable debugging"/>

        <ea:parameter property="test.integration.run.forkmode"
            default="perTest" description="The forkmode for junit integration tests; 'perTest' or 'once'"/>
        <ea:parameter property="test.integration.run.fork"
            default="true" description="Run integration tests in a separate VM. (true/false)"/>
        <ea:parameter property="test.integration.run.jvmargs"
            default="" description="Extra parameters to pass to the integration test JVM, for example to enable debugging"/>
    </target>

    <macrodef name="junit-test">
        <attribute name="prefix"/>
        <sequential>
            <mkdir dir="${target.test.xml}" />
            <mkdir dir="${@{prefix}.run.dir}"/>

            <junit
               haltonfailure="off"
               haltonerror="off"
               errorproperty="@{prefix}.failed"
               failureproperty="@{prefix}.failed"
               showoutput="no"
               printsummary="yes"
               includeantruntime="yes"
               dir="${@{prefix}.run.dir}"
               fork="${@{prefix}.run.fork}" forkmode="${@{prefix}.run.forkmode}">

                <jvmarg line="${@{prefix}.run.jvmargs}"/>

                <classpath>
                    <path refid="run.@{prefix}.classpath" />
                </classpath>

                <formatter type="xml"/>
                <batchtest todir="${target.test.xml}">
                    <resources refid="target.@{prefix}.set"/>
                </batchtest>
            </junit>

        </sequential>
    </macrodef>

    <target name="-test-junit:test" depends="abstract-test:compute-test-sets" unless="skip.test">
        <junit-test prefix="test"/>
    </target>

    <target name="-test-junit:integration-test" depends="abstract-test:compute-test-sets" unless="skip.test.integration">
        <junit-test prefix="test.integration"/>
    </target>

    <target name="test-junit:run" if="test.mode.run" unless="skip.test" depends="-test-junit:test" description="run junit tests" extensionOf="abstract-test:test-run">
        <check-test-result propertytocheck="test.failed" 
            message="At least one test has failed. See logs in ${target.test.xml} for details or use the report target to run the test with a report"/>
    </target>

    <target name="test-junit:run-integration" if="test.mode.run" unless="skip.test.integration" depends="-test-junit:integration-test" description="run junit integration tests" extensionOf="abstract-test:test-run">
        <check-test-result propertytocheck="test.integration.failed"
            message="At least one integration test has failed. See logs in ${target.test.xml} for details or use the report target to run the test with a report" />
    </target>

    <target name="test-junit:report" if="test.mode.report" unless="skip.test" depends="-test-junit:test,-test-junit:integration-test" description="generate junit report">
        <junitreport todir="${target.test.xml}">
            <fileset dir="${target.test.xml}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${target.test.html}" />
        </junitreport>
        <fail if="test.failed"
              message="At least one test has failed. See logs in ${target.test.xml} or report in ${target.test.html}" />
        <fail if="test.integration.failed"
              message="At least one integration test has failed. See logs in ${target.test.xml} or report in ${target.test.html}" />
    </target>

</project>
