<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project name="org.apache.easyant.plugins#ivy-publication" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:ac="antlib:net.sf.antcontrib"
    xmlns:ea="antlib:org.apache.easyant">

    <ea:core-version requiredrevision="[0.9,+]" />

    <extension-point name="ivy-publication:generate-release-version" description="defines how to build release version number" />
    <extension-point name="ivy-publication:generate-shared-version" description="defines how to build shared version number" />
    <extension-point name="ivy-publication:generate-local-version" description="defines how to build local version number" />
    <extension-point name="ivy-publication:publish-ready" description="defines publication prerequisites" />

    <target name="-ivy-publication:init">
        <ea:parameter property="release.resolver" default="shared"
            description="the name of the resolver use for release publication" />
        <ea:parameter property="shared.resolver" default="shared" description="the name of the shared resolver" />
        <ea:parameter property="local.resolver" default="local" description="the name of the local resolver" />

        <ea:parameter property="project.ivy.instance" default="project.ivy.instance" description="ivy instance name" />
        <ea:parameter property="project.ivy.file" required="true"
            description="ivy file (use to resolve dependencies for the project)" />
        <ea:parameter property="publish.overwrite" default="false"
            description="specify if publish should overwrite existing artifacts or not" />

        <ea:parameter property="ivy.haltonmissing" description="defines if ivy must halt when artifact is missing"
            default="true" />
        <!-- is project ivy settings configured ? -->
        <ea:parameter property="project.ivy.settings.file" description="the ivysettings file used by your project" />
        <ea:parameter property="project.ivy.settings.url" description="the ivysettings url used by your project" />
        <ea:parameter property="target.artifacts" default="${target}/artifacts" description="destination directory for target artifacts" />

        <ea:parameter property="fail.publication.if.no.revision" default="true"
            description="fail build if current module has no revision in 'info' tag of the module.ivy" />
        <condition property="is.project.ivy.settings.configured">
            <isreference refid="${project.ivy.instance}" />
        </condition>
        <fail unless="is.project.ivy.settings.configured"
            message="project ivy instance is not configured, at least one of the following property must be set : project.ivy.settings.file, project.ivy.settings.url" />
    </target>

    <macrodef name="check-version-number">
        <sequential>
            <property name="pub.no.revision.message"
                value="It seems that you did not specify the revision number of your project, we strongly recommend you to set it through the 'info' tag in your module ivy before any publication" />
            <ac:if>
                <contains string="${ivy.revision}" substring="working@" />
                <ac:then>
                    <ac:if>
                        <istrue value="${fail.publication.if.no.revision}" />
                        <ac:then>
                            <fail message="${pub.no.revision.message}" />
                        </ac:then>
                        <ac:else>
                            <echo message="Warning : ${pub.no.revision.message}" level="warning" />
                        </ac:else>
                    </ac:if>
                </ac:then>
            </ac:if>
            <!-- at this point if no version was set use the one in ivy file -->
            <property name="version" value="${ivy.revision}" />
            <property name="module.name" value="${ivy.module}" />
        </sequential>
    </macrodef>
    
    <!-- ================================= 
          target: release              
         ================================= -->
    <target name="ivy-publication:release" depends="-ivy-publication:init,ivy-publication:generate-release-version,ivy-publication:publish-ready">
        <ea:checkresolver resolver="release.resolver" settingsRef="${project.ivy.instance}"
            description="name of the repository used to publish releases" />
        <check-version-number />
        <ivy:publish artifactspattern="${target.artifacts}/[artifact](-[classifier]).[ext]" resolver="${release.resolver}"
            pubrevision="${version}" status="release" settingsRef="${project.ivy.instance}" overwrite="${publish.overwrite}"
            haltonmissing="${ivy.haltonmissing}" update="true" />
        <echo message="project ${module.name} released with version ${version} on ${release.resolver}" />
    </target>

    <!-- ================================= 
          target: publish-shared              
         ================================= -->
    <target name="ivy-publication:publish-shared" depends="-ivy-publication:init,ivy-publication:generate-shared-version,ivy-publication:publish-ready">
        <ea:checkresolver resolver="shared.resolver" settingsRef="${project.ivy.instance}"
            description="name of the repository used to publish shared integration versions (snapshots)" />
        <check-version-number />
        <tstamp>
            <format property="now" pattern="yyyyMMddHHmmss" />
        </tstamp>
        <ivy:publish artifactspattern="${target.artifacts}/[artifact](-[classifier]).[ext]" resolver="${shared.resolver}"
            forcedeliver="true" pubdate="${now}" pubrevision="${version}" status="integration" overwrite="${publish.overwrite}"
            settingsRef="${project.ivy.instance}" haltonmissing="${ivy.haltonmissing}" />
        <echo message="project ${module.name} published with version ${version} on ${shared.resolver}" />
    </target>

    <!-- ================================= 
          target: publish-local              
         ================================= -->
    <target name="ivy-publication:publish-local" depends="-ivy-publication:init,ivy-publication:generate-local-version,ivy-publication:publish-ready">
        <check-version-number />
        <tstamp>
            <format property="now" pattern="yyyyMMddHHmmss" />
        </tstamp>

        <ivy:publish artifactspattern="${target.artifacts}/[artifact](-[classifier]).[ext]" resolver="${local.resolver}"
            pubrevision="${version}" pubdate="${now}" status="integration" forcedeliver="true" overwrite="${publish.overwrite}"
            settingsRef="${project.ivy.instance}" haltonmissing="${ivy.haltonmissing}" />
        <echo message="project ${module.name} published locally with version ${version}" />
    </target>

    <!-- ================================= 
          target: clean-local              
         ================================= -->
    <target name="ivy-publication:clean-local" description="cleans the local repository">
        <delete dir="${ivy.local.default.root}" />
    </target>
</project>